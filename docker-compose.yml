version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node_app
    restart: always
    ports:
      - "3000:3000" # Map container port 3000 to host port 3000
    environment:
      - MONGO_URI=mongodb://localhost:27017/cluster0 # Link to MongoDB container
      - REDIS_HOST=demo-db5usa.serverless.aps1.cache.amazonaws.com:6379 # Redis service name from this file
      - GOOGLE_CLIENT_ID=153235357696-dmn9njra045igcvp4clfljlut8uhqhhe.apps.googleusercontent.com
      - GOOGLE_CLIENT_SECRET='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'
      - JWT_SECRET='73c791e4c1c2974a07ba0899595a179f4e6797d0495cb8a0306dfb73edc6f7e187a9860c70bc4aa48c111253cd8c7aa623404fa1b019e5ecd25e52355cd9a629'
      - RATE_LIMIT_MAX=10
      - RATE_LIMIT_WINDOW=3600
    depends_on:
      - mongo
      - redis
    volumes:
      - .:/app

  mongo:
    image: mongo:6
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

volumes:
  mongo-data:
